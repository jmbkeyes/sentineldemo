buildscript {
    ext {
        springBootVersion = '2.4.5' //#2.3.12.RELEASE
        springBootManagementVersion = '1.0.11.RELEASE'
        springCloudVersion = '2020.0.2'   //#Hoxton.SR12
        REPOSITORY_HOME = "https://maven.aliyun.com"
    }
    repositories {
        maven { url '${REPOSITORY_HOME}/repository/central' }
        mavenCentral()
        maven { url 'https://repo.spring.io/snapshot' }
        maven { url 'https://repo.spring.io/milestone' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:${springBootManagementVersion}")
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    group = 'com.demo'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

subprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'
    //仓库
    repositories {
        maven { url '${REPOSITORY_HOME}//repository/central' }
        mavenCentral()
        maven { url 'https://repo.spring.io/snapshot' }
        maven { url 'https://repo.spring.io/milestone' }
    }

    configurations {
        all {
            exclude module: 'spring-boot-starter-logging'
            exclude module: "logback-classic"
            //exclude module: "spring-cloud-bus"
        }
    }

    dependencies {
        implementation('org.springframework.boot:spring-boot-starter') {
            exclude module: "spring-boot-starter-logging"
            exclude module: "logback-classic"
        }
        implementation 'org.springframework.boot:spring-boot-starter-log4j2'
        implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        annotationProcessor 'org.projectlombok:lombok'
    }

    dependencyManagement {
        imports { mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}") }
        imports { mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}" }
    }
}

